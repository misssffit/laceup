/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 scene.gltf --transform 
Files: scene.gltf [10.43KB] > C:\Studing\Frontend\react\laceupweb\public\Models\Airmax\scene-transformed.glb [1.91MB] (-18195%)
Author: arnelubbers (https://sketchfab.com/arnelubbers)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/nike-air-max-95-animal-638fc15fedce42c2ac85f1feed724eb0
Title: Nike Air Max 95 Animal
*/

import React, { useEffect, useRef , useState} from 'react'
import { Html, OrbitControls, useGLTF } from '@react-three/drei'
import gsap from 'gsap'
import { angleToRadians } from './anglecalc'
import { useFrame } from '@react-three/fiber'

export function Airmax(props) {
  const { nodes, materials } = useGLTF('/Models/Airmax/scene-transformed.glb')
    const [displayText, setDisplayText] = useState(null);
    const OrbitRef= useRef(null)
    const shoeRef = useRef(null)
    let polarangle;
    let azimuthalangle;
    useFrame(()=>{
      if(!!OrbitRef.current){
        polarangle = OrbitRef.current.getPolarAngle()
        azimuthalangle = OrbitRef.current.getAzimuthalAngle()
        console.log('polar',polarangle)
        //console.log('azimuthal',azimuthalangle)

        if(azimuthalangle> -0.5 && azimuthalangle<0.6 && polarangle > 0.9 && polarangle < 1.8){
          setDisplayText('Остаточний дизайн моделі черпає натхнення з людського тіла.');
        }else if(azimuthalangle<-1.2 && azimuthalangle > -2.2 && polarangle > 0.8 && polarangle < 1.7){
          setDisplayText('backview');
        }else if(azimuthalangle>1.1 && azimuthalangle < 2 && polarangle > 0.97 && polarangle < 1.75){
          setDisplayText('nose view');
        }else if(azimuthalangle>2.3 && azimuthalangle >-2.2 && polarangle > 0.8 && polarangle < 1.85){
          setDisplayText('back view');
        }else if(polarangle < 0.4 ){
          setDisplayText(`Верхня частина кросівок, виділена шаруватими панелями, схожими на м'язові волокна`);
        }
        else if(polarangle > 2){
          setDisplayText('підошва - нагадує хребет');
        }
        else{
          setDisplayText(null);
        }
      }
    },[OrbitRef.current])

    useEffect(()=>{
        if(!!shoeRef.current){
            const timeline = gsap.timeline({paused:true})
            timeline.to(shoeRef.current.position, {
                x: 0,
                y:0,
                duration: 0.7,
                ease: "power1.out"
            })
            timeline.to(shoeRef.current.rotation, {
              y: angleToRadians(0),
              duration: 0.3,

            }, '<0.5')
            timeline.play()
        }
    },[shoeRef.current,])

    

  return (
    <>
      <OrbitControls ref={OrbitRef}/>
      <group {...props} dispose={null}>
        <mesh geometry={nodes.defaultMaterial.geometry} 
        material={materials['1001']} position={[-2,3,0]} 
        rotation={[-angleToRadians(90), -angleToRadians(30), 0]} 
        ref={shoeRef} 
        
        />
        {displayText && <Html><div className='model_container'><div className='model_text' dangerouslySetInnerHTML={{ __html: displayText }} /></div></Html>}
      </group>
    </>
  )
}

useGLTF.preload('/Models/Airmax/scene-transformed.glb')
